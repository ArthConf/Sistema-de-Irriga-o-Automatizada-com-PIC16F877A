#include <16F877A.h>
#FUSES NOWDT, XT, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP, NOCPD, NOWRT
#use delay(clock=4000000)

#use I2C(master, sda=PIN_C4, scl=PIN_C3, slow=100000)
#include "i2c_Flex_LCD.c"

// Calibração real: ajuste para os valores medidos do seu sensor!
#define ADC_SECO   250   // Valor ADC do solo totalmente SECO (exemplo, ajuste conforme seu sensor)
#define ADC_UMIDO  900   // Valor ADC do solo totalmente MOLHADO (exemplo, ajuste conforme seu sensor)

#define SENSOR_ANALOG_CHANNEL  0     // AN0 = RA0 (A0 do sensor)
#define RELE_PIN               PIN_B0
#define LIMITE_SECO            40    // (%) abaixo disso aciona irrigação

void main() {
    set_tris_a(0b00000001);         // RA0 como entrada analógica
    set_tris_b(0b11111110);         // RB0 como saída (relé)

    output_high(RELE_PIN);          // Garante relé desligado no início

    setup_adc(ADC_CLOCK_INTERNAL);
    setup_adc_ports(AN0);

    // Inicialização do LCD
    lcd_init(0x4E, 16, 2);
    lcd_backlight_led(ON);
    lcd_putc('\f');
    lcd_gotoxy(1,1); printf(lcd_putc, "IRRIGACAO");
    lcd_gotoxy(1,2); printf(lcd_putc, "CONFESSOR");
    delay_ms(2000);
    lcd_putc('\f');

    int last_estado_irrigacao = -1;

    while(TRUE) {
        set_adc_channel(SENSOR_ANALOG_CHANNEL);
        delay_us(20);
        int16 adc_val = read_adc();

        // Corrige a inversão: agora 0% = seco, 100% = molhado
        int umidade;
        if(adc_val <= ADC_SECO) umidade = 0;
        else if(adc_val >= ADC_UMIDO) umidade = 100;
        else umidade = 100 * (adc_val - ADC_SECO) / (ADC_UMIDO - ADC_SECO);

        // INVERTE a escala se necessário (caso seu sensor seja inverso)
        // Se ao calibrar, "totalmente molhado" ainda aparecer como 0%, troque a linha acima por:
        // umidade = 100 - (100 * (adc_val - ADC_SECO) / (ADC_UMIDO - ADC_SECO));
        // MAS, normalmente, o ajuste acima já basta!

        int irrigando = (umidade <= LIMITE_SECO) ? 1 : 0;

        if(irrigando != last_estado_irrigacao) {
            lcd_putc('\f');
            if(irrigando) {
                output_low(RELE_PIN);
                lcd_gotoxy(1,1); printf(lcd_putc, "Solo Seco      ");
                lcd_gotoxy(1,2); printf(lcd_putc, "IRRIGANDO      ");
            } else {
                output_high(RELE_PIN);
                lcd_gotoxy(1,1); printf(lcd_putc, "Solo Umido     ");
                lcd_gotoxy(1,2); printf(lcd_putc, "UMIDO          ");
            }
            last_estado_irrigacao = irrigando;
        }

        // Mostra a umidade (%) e o valor ADC no LCD
        lcd_gotoxy(10,2);
        printf(lcd_putc, "%3u%%", umidade);
        lcd_gotoxy(1,2);
        printf(lcd_putc, "%4lu", adc_val);

        delay_ms(500);
    }
}

#include <16F877A.h>
#fuses NOWDT, XT, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP, NOCPD, NOWRT
#use delay(clock=4000000)

#use I2C(master, sda=PIN_C4, scl=PIN_C3, slow=100000)
#include "i2c_Flex_LCD.c"

// Calibração baseada nos seus valores
#define ADC_SECO   248   // Valor ADC para solo totalmente seco (0%)
#define ADC_UMIDO  890   // Valor ADC para solo totalmente molhado (100%)

// Canal analógico e pino do relé
#define SENSOR_ANALOG_CHANNEL  0    // AN0 = RA0
#define RELE_PIN               PIN_B0

// Limiar para irrigação (em %)
#define LIMITE_SECO            40   // Umidade abaixo deste valor aciona irrigação

void main() {
    set_tris_a(0b00000001);         // RA0 como entrada analógica (sensor)
    set_tris_b(0b11111110);         // RB0 como saída (relé)

    output_high(RELE_PIN);          // Relé desligado no início

    setup_adc(ADC_CLOCK_INTERNAL);
    setup_adc_ports(AN0);           // Habilita apenas AN0 (RA0) como analógico

    // Inicialização do LCD I2C
    lcd_init(0x4E, 16, 2);
    lcd_backlight_led(ON);
    lcd_putc('\f');
    lcd_gotoxy(1,1); printf(lcd_putc, "IRRIGACAO");
    lcd_gotoxy(1,2); printf(lcd_putc, "UMIDADE SOLO");
    delay_ms(2000);
    lcd_putc('\f');

    int last_estado_irrigacao = -1;

    while(TRUE) {
        set_adc_channel(SENSOR_ANALOG_CHANNEL);
        delay_us(20);
        int16 adc_val = read_adc();

        int umidade = ((adc_val - ADC_SECO) * 100) / (ADC_UMIDO - ADC_SECO);
        if(umidade < 0) umidade = 0;
        if(umidade > 100) umidade = 100;

        // Lógica de irrigação
        int irrigando = (umidade <= LIMITE_SECO) ? 1 : 0;

        if(irrigando != last_estado_irrigacao) {
            lcd_putc('\f');
            if(irrigando) {
                output_low(RELE_PIN);
                lcd_gotoxy(1,1); printf(lcd_putc, "Solo Seco      ");
                lcd_gotoxy(1,2); printf(lcd_putc, "IRRIGANDO      ");
            } else {
                output_high(RELE_PIN);
                lcd_gotoxy(1,1); printf(lcd_putc, "Solo Umido     ");
                lcd_gotoxy(1,2); printf(lcd_putc, "UMIDO          ");
            }
            last_estado_irrigacao = irrigando;
        }

        // Exibe umidade (%) e ADC no LCD
        lcd_gotoxy(10,2);
        printf(lcd_putc, "%3u%%", umidade);
        lcd_gotoxy(1,2);
        printf(lcd_putc, "%4lu", adc_val);

        delay_ms(500);
    }
}
